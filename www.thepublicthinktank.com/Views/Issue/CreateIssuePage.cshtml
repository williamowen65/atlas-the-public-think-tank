@using System.ComponentModel.DataAnnotations
@using atlas_the_public_think_tank.Data.CRUD
@using atlas_the_public_think_tank.Data.RepositoryPattern.Repository.Helpers
@using atlas_the_public_think_tank.Models.Database
@model CreateIssuePageViewModel;

@{
    ViewData["Title"] = "Create a new Issue";
    Console.WriteLine("test");
}


<style>

    
</style>



<div class="m-1 create-issue-page" >

    <div id="issue">
        @*  
            After saving issue as Draft or Publish, a rendered card replaces this content.
            The user can cast their initial vote, or to back to edit.
        *@
    
        @await Html.PartialAsync("~/Views/Issue/_create-or-edit-issue.cshtml", new CreateOrEditIssueWrapper
        {
            Issue = Model.MainIssue,
            Scopes = Model.Scopes,
        })
    </div>

    @* Solutions will be set in this container*@
    <div class="issue-solutions"></div>

    <div class="col-6 mx-auto mt-2 d-flex">
        <button id="add-solution" class="btn btn-success fw-bold fs-4 flex-grow-1" type="button">Add Solution</button>
    </div>

</div>

<script src="~/js/CreateIssue.js"></script>
<script src="~/js/CreateSolution.js"></script>  