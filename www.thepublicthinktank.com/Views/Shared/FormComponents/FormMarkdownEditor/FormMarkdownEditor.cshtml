@using System.ComponentModel.DataAnnotations
@model dynamic

@{

    // Validate ViewData
    if (ViewData["PropertyName"] == null)
    {
        throw new Exception("Missing PropertyName argument");
    }

    var propertyName = ViewData["PropertyName"] as string;

    var labelText = propertyName;
    var rows = ViewData["Rows"] as int? ?? 1;
    var uniqueId = $"field_{Guid.NewGuid().ToString("N")}";
    bool isRequired = false;
    object propertyValue = null;

    try
    {
        // Get property info
        var propertyInfo = Model.GetType().GetProperty(propertyName);

        // Safe way to get attributes
        if (propertyInfo != null)
        {
            var attributes = propertyInfo.GetCustomAttributes(false);
            foreach (var attr in attributes)
            {
                
                if (attr is RequiredAttribute requiredBool)
                {
                    isRequired = true;
                }
                if (attr is DisplayAttribute displayAttr)
                {
                    labelText = displayAttr.Name;
                }
            }

            propertyValue = Model.GetType().GetProperty(propertyName)?.GetValue(Model, null);
        }
    }
    catch (Exception ex)
    {
        // Silently handle any exceptions and use default values
    }
}



<style>
    .form-field-markdown-editor .form-field-container {
        border: 1px solid rgb(220, 225, 231);
        border-radius: var(--bs-border-radius);
        position: relative;
    }

        .form-field-markdown-editor .form-label {
            font-size: x-large;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            left: 10px;
            transition: top 0.5s ease, left 0.5s ease, transform 0.5s ease, font-size 0.5s ease;
        }

        .form-field-markdown-editor.active .form-label {
            top: 0;
            left: 10px;
            font-size: smaller;
            transform: translateY(0%);
        }

        .form-field-markdown-editor textarea {
            border: none;
            padding: 10px 10px 0px;
        }
</style>


<div id="@uniqueId" class="mb-4 form-field-markdown-editor form-element">
    <div class="form-field-container">
    <label for="@propertyName" class="form-label d-none">@labelText @(isRequired ? "*" : "")</label>
    <textarea placeholder="@labelText @(isRequired ? "*" : "")" id="@propertyName" name="@propertyName" class="form-control" rows="@rows">@(propertyValue as string)</textarea>
    </div>
    <span data-valmsg-for="@propertyName" class="text-danger"></span>
   
</div>

