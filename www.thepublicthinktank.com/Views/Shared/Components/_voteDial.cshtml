@model UserVote_Generic_ReadVM

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    // Generate unique IDs using the issue ID
    var dialId = $"vote-dial-{Model.ContentID}";
    var lensId = $"vote-lens-{Model.ContentID}";
    var outlineId = $"vote-outline-{Model.ContentID}";
}

@* issue @Model.IssueID *@
<div class="dial mb-2" style="width: var(--dial-width); height: 190px; user-select:none;">
    
    @Html.Partial("~/Views/Shared/Components/_voteAverage.cshtml")
    
    <div class="vote-dial-toggle @(Model.UserVote.HasValue ? "user-voted" : "") mb-1">
        <div id="vote-toggle-container-@Model.ContentID" class="vote-toggle-container" data-content-type="@Model.ContentType">
            @for (int i = 10; i >= 0; i--)
            {
                var radioId = $"vote-{Model.ContentID}-{i}";
                <input class="" id="@radioId" type="radio" name="@dialId" value="@i" @(i == (Model.UserVote ?? 5) ? "checked" : "") />
            }

            <div id="@lensId" class="lens"></div>

            <div id="@outlineId" class="outline"></div>
          
            @for (int i = 11; i >= -1; i--)
            {
                var radioId = $"vote-{Model.ContentID}-{i}";
                var optionClass = $"vote-option-{Model.ContentID}-{i}";
                <label role="button" for="@radioId" class="toggle-option @optionClass">
                    <span>@(i == 11 || i == -1 ? "" : i.ToString())</span>
                </label>
            }
        </div>
    </div>    
    
    @Html.Partial("~/Views/Shared/Components/_voteCount.cshtml")
  
</div>

 <style>

        /* Position the lens based on which radio is selected */     
        @for (int i = 10; i >= 0; i--)
        {
            var radioId = $"vote-{Model.ContentID}-{i}";
            var optionClass = $"vote-option-{Model.ContentID}-{i}";
            <text>
            #@radioId:checked ~ .lens {
                transform: translateY(@(36 * (11 - i))px);
                z-index: 1;
            }
            #@radioId:checked ~ .@optionClass {
                color: #ffffff; /* Make text white when selected */
            }
            </text>
        }

        /* Style for the labels */
        @for (int i = 11; i >= -1; i--)
        {
            var optionClass = $"vote-option-{Model.ContentID}-{i}";
            <text>
            .@optionClass {
                position: absolute;
                width: 100%;
                top: @(36 * (11 - i))px;
                @if(i == 11 || i == -1) {
                    <text>opacity: 0.5; /* Make buffer options semi-transparent */</text>
                }
            }
            </text>
        }

      
 </style>    

