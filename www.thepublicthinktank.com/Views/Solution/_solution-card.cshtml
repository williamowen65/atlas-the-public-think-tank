@using atlas_the_public_think_tank.Models.ViewModel

@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@using atlas_the_public_think_tank.Models.Database
@inject UserManager<AppUser> UserManager
@*
    Layout of the solution card
*@
@model Solution_ReadVM

@{
    Boolean IsContentLong = true;
    string? userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    bool doesUserOwnContent = false;
    AppUser? user = null;
    if (!string.IsNullOrEmpty(userId) && Model.Author != null)
    {
        doesUserOwnContent = Model.Author.Id.ToString() == userId;
        user = await UserManager.GetUserAsync(User);
    }
}



@if (doesUserOwnContent && user != null)
{
    <div class="card mx-5 text-center border-info author-content-alert" data-id="@Model.SolutionID" style="border-bottom:0px;border-bottom-left-radius: 0px; border-bottom-right-radius: 0px">
        <div class="card-header" style="border-bottom:0px">
            You are the owner of this solution node.
            <div class="float-end">
                <button data-content-id="@Model.SolutionID" class="edit-solution-button border-0 bg-transparent"> <i class="fa fa-edit"></i></button>
            </div>
        </div>
    </div>
}

<div class="card mb-3 solution-card" id="@Model.SolutionID" data-content-type="solution">
    <div class="card-content position-relative mb-2">
        <div class="dial-container" style="float:left">
            @await Html.PartialAsync("~/Views/Shared/Components/_voteDial.cshtml", new UserVote_Generic_ReadVM()
            {
                AverageVote = Model.VoteStats.AverageVote,
                ContentID = Model.VoteStats.ContentID,
                ContentType = Model.VoteStats.ContentType,
                GenericContentVotes = Model.VoteStats.SolutionVotes,
                TotalVotes = Model.VoteStats.TotalVotes
            })
        </div>

        <div class="card-header" style="border-left:var(--bs-card-border-width) solid var(--bs-card-border-color); border-top-left-radius: 0; margin-left: var(--dial-width)">
            <h5 class="mb-0">
                <div style="font-size:20px;" class="float-end">
                    @await Html.PartialAsync("~/Views/Solution/_solution-card-stat-icons.cshtml", Model)
                </div>
                <span class="float-start me-2">

                @await Html.PartialAsync("~/Views/Shared/Icons/_Solutions.cshtml")
                </span>
                @* Title and this float need to be next to each other for float styling to work. *@
                <span class="card-title">@Model.Title</span>
            </h5>
            <small class="text-muted">Posted by @Model.Author?.UserName on @Model.CreatedAt.ToString("MMM dd, yyyy")</small>
        </div>

        <p class="mx-2 mb-2 truncate-multiline text-collapsible-target" style="white-space: pre-wrap">@Model.Content</p>

        @* @if (Model.Categories != null && Model.Categories.Any())
        {
            <div class="mt-2">
                @foreach (var category in Model.Categories)
                {
                    <span class="badge bg-secondary me-1">@category.CategoryName</span>
                }
            </div>
        } *@
        
        @if (IsContentLong)
        {
            <div class="expand-button-spacer" style="height: 30px;"></div>
        }
    </div>

    @await Html.PartialAsync("~/Views/Shared/_Breadcrumb.cshtml", Model.BreadcrumbTags)

    <div class="card-footer d-flex justify-content-between">
        <div class="" id="card-@Model.SolutionID-footer-alert">
        </div>
        @if (IsContentLong)
        {
            <div class="card-collapse-toggle-container position-absolute" style="
                left: 50%;
                transform: translate(-50%, @(Model.BreadcrumbTags.Count > 0 ? "-77px" : "-48px"));
            ">
                <button class="card-expand-toggle btn btn-secondary btn-sm mx-auto">Expand</button>
            </div>
        }
        <div class="">
            @if (IsContentLong)
            {
                <button class="card-minimize-toggle btn btn-secondary btn-sm mx-auto d-none">Minimize</button>
            }
            <a href="@Url.Action("ReadSolution", "Solution", new { id = Model.SolutionID })" class="btn view-btn btn-sm btn-outline-primary bg-primary-subtle">View</a>
            <a href="#" class="btn btn-sm btn-outline-secondary bg-success-subtle">Share</a>
            <a href="#" class="btn btn-sm btn-outline-secondary bg-dark-subtle">Follow</a>
        </div>
    </div>
</div>
