@using atlas_the_public_think_tank.Models.ViewModel.CRUD.Solution
@using atlas_the_public_think_tank.Models.ViewModel.PageVM
@using atlas_the_public_think_tank.Models.ViewModel.UI_VM
@*
    Layout of the solution page, where the sub-issues, comments, etc can be found by the user
*@


@model Solution_PageVM;
@{
    ViewData["Title"] = Model.Solution.Title;
}

<div class="container mt-3  ">

    @await Html.PartialAsync(
        "~/Views/Solution/_solution-card.cshtml",
        Model.Solution,
        new ViewDataDictionary(ViewData) { { "defaultExpand", true } }
    )

    <nav class="d-flex sub-content-tab-bar position-sticky bg-body" style="top:var(--header-height); z-index:11">
        <div class="nav nav-tabs flex-grow-1 text-nowrap overflow-x-scroll overflow-y-hidden" style="flex-wrap: revert;" id="nav-tabs" role="tablist">

            <button class="nav-link active" id="comments-tab" data-bs-toggle="tab" data-bs-target="#issue-comments" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">
                <div class="content-count">@Model.Solution.Comments.Count()</div>
                @await Html.PartialAsync("~/Views/Shared/Icons/_Comments.cshtml")
                Comments
            </button>
            <button class="nav-link" id="sub-issues-tab" data-bs-toggle="tab" data-bs-target="#sub-issues" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">
                <div class="content-count">@Model.Solution.PaginatedSubIssues.ContentCount.FilteredCount</div>
                @await Html.PartialAsync("~/Views/Shared/Icons/_SubIssues.cshtml")
                Sub-Issues
            </button>
            <button class="nav-link d-flex align-items-center" id="parent-post-tab" data-bs-toggle="tab" data-bs-target="#parent-post" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">
                <div class="content-count">
                    <span>@(Model.Solution.ParentIssue != null ? 1 : 0)</span>
                </div>
                <div class="me-2">
                    @await Html.PartialAsync("~/Views/Shared/Icons/_ParentIssue.cshtml")
                </div>

                @if (Model.Solution.ParentIssue != null)
                {
                    <span>Parent Issue</span>
                }
                else
                {
                    <span>Parent Post</span>
                }
            </button>


        </div>
        <div class="ms-2 pt-2">

            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false" id="actionDropdown">
                @Html.Partial("~/Views/Shared/Icons/_ActionsIcon.cshtml")
                Actions
            </a>
            <ul class="dropdown-menu" id="dynamic-actions">
                <!-- Content will be dynamically populated -->
            </ul>
        </div>
    </nav>
    <div class="tab-content" id="nav-tabContent">

        <div class="tab-pane show active fade border border-1 border-top-0" id="issue-comments" role="tabpanel" aria-labelledby="comments-tab">

            @if (Model.Solution.Comments.Count() == 0)
            {
                <div id="empty-issueView-comment-feed" class="empty-feed">
                    <div class="comment-feed">
                        <div class="content">
                            <h2>Empty Comment Feed</h2>
                            <button class="outlined-text">Start a Discussion</button>
                        </div>
                    </div>
                </div>
            }
            else
            {

                <p>Comment feed for this issue</p>
            }
        </div>
        <div class="tab-pane fade border border-1 border-top-0" id="sub-issues" role="tabpanel" aria-labelledby="sub-issues-tab">
           
                <div id="sub-issue-content">
                    @if (Model.Solution.PaginatedSubIssues != null && Model.Solution.PaginatedSubIssues.Issues.Any())
                    {
                    @await Html.PartialAsync("~/Views/Issue/_issue-cards.cshtml", Model.Solution.PaginatedSubIssues.Issues)
                } else
                {
                    <div id="empty-issueView-sub-issues-feed" class="empty-feed">

                        <div class="comment-feed">
                            <div class="content">
                                <h2>Empty Sub Issues Feed</h2>
                                <a href="@Url.Action("CreateIssue", "Issue", new { parentSolutionID = Model.Solution.SolutionID })">
                                    <button class="outlined-text">Create Sub-Issue</button>
                                </a>

                            </div>
                        </div>
                    </div>

                }
            </div>

            @await Html.PartialAsync("~/Views/Shared/Components/_pagination-button.cshtml", new PaginationButton_VM
                {
                    ElementId = "fetchPaginatedSubIssues",
                    ContentType = "sub-issues",
                    Target = "#sub-issue-content",
                    Url = "/solution/getPaginatedSubIssues/" + @Model.Solution.SolutionID,
                    CurrentPage = Model.Solution.PaginatedSubIssues.ContentCount.FilteredCount,
                    PageSize = Model.Solution.PaginatedSubIssues.PageSize,
                    TotalCount = Model.Solution.PaginatedSubIssues.ContentCount.FilteredCount,
                    // TotalPages = Model.Solution.PaginatedSubIssues.TotalPages
                })


        </div>

        <div class="tab-pane fade border border-1 border-top-0" id="parent-post" role="tabpanel" aria-labelledby="parent-post-tab">
            @if (Model.Solution.ParentIssue != null)
            {
                @Html.Partial("~/Views/Issue/_issue-card.cshtml", Model.Solution.ParentIssue)
                ;
            }
            else
            {
                <p class="empty-feed">There is no parent post</p>
            }
        </div>
    </div>
</div>

<script>

      document.addEventListener("DOMContentLoaded", function() {
        initTabbedForum({
            paginationButtonId: "fetchPaginatedSubIssues",
            tabId: 'sub-issues-tab'
        });
      
        initTabbedForum({
            tabId: 'parent-post-tab'
        });
        dynamicDropdownContent({
            defaultTab: 'comments-tab',
            parentContentType: "Solution",
            issueId: "@Model.Solution.SolutionID",
            parentIssueId: "@Model.Solution.ParentIssueID",
        });
    })



</script>


<script src="~/js/Content/Read.js" asp-append-version="true"></script>

<script src="~/js/Site/remember-tab.js" asp-append-version="true"></script>
